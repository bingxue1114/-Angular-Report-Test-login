{"version":3,"sources":["./src/app/products/add-edit.component.ts","./src/app/products/add-edit.component.html","./src/app/products/layout.component.ts","./src/app/products/layout.component.html","./src/app/products/list.component.ts","./src/app/products/list.component.html","./src/app/products/products-routing.module.ts","./src/app/products/products.module.ts"],"names":[],"mappings":"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","file":"products-products-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { ProductService, AlertService } from '@app/_services';\n\n@Component({ templateUrl: 'add-edit.component.html' })\nexport class AddEditComponent implements OnInit {\n    form: FormGroup;\n    product_id: string;\n    isAddMode: boolean;\n    loading = false;\n    submitted = false;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private productService: ProductService,\n        private alertService: AlertService\n    ) {}\n\n    ngOnInit() {\n        this.product_id = this.route.snapshot.params['product_id'];\n        this.isAddMode = !this.product_id;\n\n        this.form = this.formBuilder.group({\n          product_id: ['', Validators.required],\n          name: ['', Validators.required],\n          discription: ['', Validators.required],\n          image: ['', Validators.required]\n        });\n\n        if (!this.isAddMode) {\n            this.productService.getById(this.product_id)\n                .pipe(first())\n                .subscribe(x => this.form.patchValue(x));\n        }\n    }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.form.controls; }\n\n    onSubmit() {\n        this.submitted = true;\n\n        // reset alerts on submit\n        this.alertService.clear();\n\n        // stop here if form is invalid\n        if (this.form.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        if (this.isAddMode) {\n            this.createProduct();\n        } else {\n            this.updateProduct();\n        }\n    }\n\n    private createProduct() {\n        this.productService.register(this.form.value)\n            .pipe(first())\n            .subscribe({\n                next: () => {\n                    this.alertService.success('Product added successfully', { keepAfterRouteChange: true });\n                    this.router.navigate(['../'], { relativeTo: this.route });\n                },\n                error: error => {\n                    this.alertService.error(error);\n                    this.loading = false;\n                }\n            });\n    }\n\n    private updateProduct() {\n        this.productService.update(this.product_id, this.form.value)\n            .pipe(first())\n            .subscribe({\n                next: () => {\n                    this.alertService.success('Update successful', { keepAfterRouteChange: true });\n                    this.router.navigate(['../../'], { relativeTo: this.route });\n                },\n                error: error => {\n                    this.alertService.error(error);\n                    this.loading = false;\n                }\n            });\n    }\n}\n","<h1 *ngIf=\"isAddMode\">Add Product</h1>\n<h1 *ngIf=\"!isAddMode\">Edit Product</h1>\n<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-row\">\n        <div class=\"form-group col\">\n            <label for=\"product_id\">Id</label>\n            <input type=\"text\" formControlName=\"product_id\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.product_id.errors }\" />\n            <div *ngIf=\"submitted && f.product_id.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.product_id.errors.required\">Id is required</div>\n            </div>\n        </div>\n        <div class=\"form-group col\">\n            <label for=\"name\">Name</label>\n            <input type=\"text\" formControlName=\"name\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.name.errors }\" />\n            <div *ngIf=\"submitted && f.name.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.name.errors.required\">Name is required</div>\n            </div>\n        </div>\n    </div>\n    <div class=\"form-row\">\n        <div class=\"form-group col\">\n            <label for=\"discription\">Discription</label>\n            <input type=\"text\" formControlName=\"discription\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.discription.errors }\" />\n            <div *ngIf=\"submitted && f.discription.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.discription.errors.required\">Discription is required</div>\n            </div>\n        </div>\n        <div class=\"form-group col\">\n            <label for=\"image\">Image</label>\n            <input type=\"text\" formControlName=\"image\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.image.errors }\" />\n            <div *ngIf=\"submitted && f.image.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.image.errors.required\">Image is required</div>\n            </div>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <button [disabled]=\"loading\" class=\"btn btn-primary\">\n            <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n            Save\n        </button>\n        <a routerLink=\"/productsCRUDsystem\" class=\"btn btn-link\">Cancel</a>\n    </div>\n</form>","import { Component } from '@angular/core';\n\n@Component({ templateUrl: 'layout.component.html' })\nexport class LayoutComponent { }","<div class=\"p-4\">\n    <div class=\"container\">\n        <router-outlet></router-outlet>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { ProductService } from '@app/_services';\n\n@Component({ templateUrl: 'list.component.html' })\nexport class ListComponent implements OnInit {\n    products = null;\n\n\n    constructor(private productService: ProductService) {}\n\n    ngOnInit() {\n        this.productService.getAll()\n            .pipe(first())\n            .subscribe(products => this.products = products);\n    }\n\n    deleteProduct(product_id: string) {\n        const product = this.products.find(x => x.product_id === product_id);\n        product.isDeleting = true;\n        this.productService.delete(product_id)\n            .pipe(first())\n            .subscribe(() => this.products = this.products.filter(x => x.product_id !== product_id));\n    }\n}\n","<h1>Products</h1>\n<a routerLink=\"add\" class=\"btn btn-sm btn-success mb-2\">Add Product</a>\n<table class=\"table table-striped\">\n    <thead>\n        <tr>\n            <th style=\"width: 30%\">Id</th>\n            <th style=\"width: 30%\">Name</th>\n            <th style=\"width: 30%\">Discription</th>\n            <th style=\"width: 10%\"></th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let product of products\">\n            <td>{{product.product_id}}</td>\n            <td>{{product.name}}</td>\n            <td>{{product.discription}}</td>\n            <td style=\"white-space: nowrap\">\n                <a routerLink=\"edit/{{product.product_id}}\" class=\"btn btn-sm btn-primary mr-1\">Edit</a>\n                <button (click)=\"deleteProduct(product.product_id)\" class=\"btn btn-sm btn-danger btn-delete-product\" [disabled]=\"product.isDeleting\">\n                    <span *ngIf=\"product.isDeleting\" class=\"spinner-border spinner-border-sm\"></span>\n                    <span *ngIf=\"!product.isDeleting\">Delete</span>\n                </button>\n            </td>\n        </tr>\n        <tr *ngIf=\"!products\">\n            <td colspan=\"4\" class=\"text-center\">\n                <span class=\"spinner-border spinner-border-lg align-center\"></span>\n            </td>\n        </tr>\n    </tbody>\n</table>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LayoutComponent } from './layout.component';\nimport { ListComponent } from './list.component';\nimport { AddEditComponent } from './add-edit.component';\n\nconst routes: Routes = [\n  {\n      path: '', component: LayoutComponent,\n      children: [\n          { path: '', component: ListComponent },\n          { path: 'add', component: AddEditComponent },\n          { path: 'edit/:id', component: AddEditComponent }\n      ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProductsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport { ProductsRoutingModule } from './products-routing.module';\nimport { LayoutComponent } from './layout.component';\nimport { ListComponent } from './list.component';\nimport { AddEditComponent } from './add-edit.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    ProductsRoutingModule\n  ],\n  declarations: [\n      LayoutComponent,\n      ListComponent,\n      AddEditComponent\n  ]\n})\nexport class ProductsModule { }\n"],"sourceRoot":"webpack:///"}