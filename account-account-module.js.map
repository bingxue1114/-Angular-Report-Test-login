{"version":3,"sources":["./src/app/account/account-routing.module.ts","./src/app/account/account.module.ts","./src/app/account/layout.component.ts","./src/app/account/layout.component.html","./src/app/account/login.component.ts","./src/app/account/login.component.html","./src/app/account/register.component.ts","./src/app/account/register.component.html"],"names":[],"mappings":"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","file":"account-account-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LayoutComponent } from './layout.component';\nimport { LoginComponent } from './login.component';\nimport { RegisterComponent } from './register.component';\n\nconst routes: Routes = [\n    {\n        path: '', component: LayoutComponent,\n        children: [\n            { path: 'login', component: LoginComponent },\n            { path: 'register', component: RegisterComponent }\n        ]\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class AccountRoutingModule { }","import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport { AccountRoutingModule } from './account-routing.module';\nimport { LayoutComponent } from './layout.component';\nimport { LoginComponent } from './login.component';\nimport { RegisterComponent } from './register.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        AccountRoutingModule\n    ],\n    declarations: [\n        LayoutComponent,\n        LoginComponent,\n        RegisterComponent\n    ]\n})\nexport class AccountModule { }","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AccountService } from '@app/_services';\n\n@Component({ templateUrl: 'layout.component.html' })\nexport class LayoutComponent {\n    constructor(\n        private router: Router,\n        private accountService: AccountService\n    ) {\n        // redirect to home if already logged in\n        if (this.accountService.userValue) {\n            this.router.navigate(['/']);\n        }\n    }\n}","<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AccountService, AlertService } from '@app/_services';\n\n@Component({ \n    templateUrl: 'login.component.html', \n    styleUrls: ['./login.component.css'] \n})\nexport class LoginComponent implements OnInit {\n    form: FormGroup;\n    loading = false;\n    submitted = false;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private accountService: AccountService,\n        private alertService: AlertService\n    ) { }\n\n    ngOnInit() {\n        this.form = this.formBuilder.group({\n            username: ['', Validators.required],\n            password: ['', Validators.required]\n        });\n    }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.form.controls; }\n\n    onSubmit() {\n        this.submitted = true;\n\n        // reset alerts on submit\n        this.alertService.clear();\n\n        // stop here if form is invalid\n        if (this.form.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        this.accountService.login(this.f.username.value, this.f.password.value)\n            .pipe(first())\n            .subscribe({\n                next: () => {\n                    // get return url from query parameters or default to home page\n                    const returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n                    this.router.navigateByUrl(returnUrl);\n                },\n                error: error => {\n                    this.alertService.error(error);\n                    this.loading = false;\n                }\n            });\n    }\n}","<div class=\"container\" style=\"clear:both; width:100%;\">\n    <div class=\"row\">\n        <div class=\"col-xs-12 col-sm-3\"></div>\n        <div class=\"col-xs-12 col-sm-6\">\n            <div class=\"login-form\">\n\n                <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\" class=\"form-main\">\n\n                    <div class=\"col-xs-12 col-sm-10 col-sm-offset-1\">\n\n                        <div class=\"form-title\">\n                            <h1 class=\"text-center\">登入</h1>\n                        </div>\n\n\n                        <div class=\"form-group\">\n                            <label for=\"username\"><span class=\"fa far fa-user\"></span> 使用者名稱</label>\n                            <input type=\"text\" formControlName=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\n                            <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.username.errors.required\" style=\"color: #f00; font-size: 12px; font-weight: bold;\">*使用者名稱不能為空</div>\n                            </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"password\"><span class=\"fa far fa-lock\"></span> 密碼</label>\n                            <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n                            <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.password.errors.required\" style=\"color: #f00; font-size: 12px; font-weight: bold;\">*密碼不能為空</div>\n                            </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <button [disabled]=\"loading\" class=\"btn btn-transparent btn-block\">\n                              <!-- <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span> -->\n                              <div *ngIf=\"loading\" class=\"loader\"></div>\n                              <div *ngIf=\"!loading\">登入</div>\n                            </button>\n\n                        </div>\n\n                        <div class=\"signUp\">\n                            還不是會員？<a routerLink=\"../register\" class=\"btn btn-link\">點我註冊</a>\n                        </div>\n\n\n                    </div>\n\n\n                </form>\n            </div>\n        </div>\n        <div class=\"col-xs-12 col-sm-3\"></div>\n    </div>\n    <!-- Row -->\n</div>\n<!--Container -->\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AccountService, AlertService } from '@app/_services';\n\n@Component({ \n    templateUrl: 'register.component.html', \n    styleUrls: ['./register.component.css'] \n})\nexport class RegisterComponent implements OnInit {\n    form: FormGroup;\n    loading = false;\n    submitted = false;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private accountService: AccountService,\n        private alertService: AlertService\n    ) { }\n\n    ngOnInit() {\n        this.form = this.formBuilder.group({\n            firstName: ['', Validators.required],\n            lastName: ['', Validators.required],\n            username: ['', Validators.required],\n            password: ['', [Validators.required, Validators.minLength(6)]]\n        });\n    }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.form.controls; }\n\n    onSubmit() {\n        this.submitted = true;\n\n        // reset alerts on submit\n        this.alertService.clear();\n\n        // stop here if form is invalid\n        if (this.form.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        this.accountService.register(this.form.value)\n            .pipe(first())\n            .subscribe({\n                next: () => {\n                    this.alertService.success('Registration successful', { keepAfterRouteChange: true });\n                    this.router.navigate(['../login'], { relativeTo: this.route });\n                },\n                error: error => {\n                    this.alertService.error(error);\n                    this.loading = false;\n                }\n            });\n    }\n}","<div class=\"container\" style=\"clear:both; width:100%;\">\n    <div class=\"row\">\n        <div class=\"col-xs-12 col-sm-3\"></div>\n        <div class=\"col-xs-12 col-sm-6\">\n            <div class=\"login-form\">\n\n                <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\" class=\"form-main\">\n\n                    <div class=\"col-xs-12 col-sm-10 col-sm-offset-1\">\n\n                        <div class=\"form-title\">\n                            <h1 class=\"text-center\">註冊</h1>\n                        </div>\n\n\n                        <div class=\"form-group\">\n                            <label for=\"firstName\">名稱</label>\n                            <input type=\"text\" formControlName=\"firstName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.firstName.errors }\" />\n                            <div *ngIf=\"submitted && f.firstName.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.firstName.errors.required\" style=\"color: #f00; font-size: 12px; font-weight: bold;\">*名稱不能為空</div>\n                            </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"lastName\">姓氏</label>\n                            <input type=\"text\" formControlName=\"lastName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.lastName.errors }\" />\n                            <div *ngIf=\"submitted && f.lastName.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.lastName.errors.required\" style=\"color: #f00; font-size: 12px; font-weight: bold;\">*姓氏不能為空</div>\n                            </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"username\">使用者名稱 <small style=\"font-weight: bold;\">(帳號)</small></label>\n                            <input type=\"text\" formControlName=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\n                            <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.username.errors.required\" style=\"color: #f00; font-size: 12px; font-weight: bold;\">*使用者名稱不能為空</div>\n                            </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"password\">密碼</label>\n                            <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n                            <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.password.errors.required\" style=\"color: #f00; font-size: 12px; font-weight: bold;\">*密碼不能為空</div>\n                                <div *ngIf=\"f.password.errors.minlength\" style=\"color: #f00; font-size: 12px; font-weight: bold;\">*密碼不能少於6個字</div>\n                            </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <button [disabled]=\"loading\" class=\"btn btn-transparent btn-block\">\n                              <div *ngIf=\"loading\" class=\"loader\"></div>\n                              <div *ngIf=\"!loading\">註冊</div>\n                            </button>\n                        </div>\n\n                        <div class=\"signUp\">\n                            已經是會員了？<a routerLink=\"../login\" class=\"btn btn-link\">點我登入</a>\n                        </div>\n\n\n                    </div>\n\n\n                </form>\n            </div>\n        </div>\n        <div class=\"col-xs-12 col-sm-3\"></div>\n    </div>\n    <!-- Row -->\n</div>\n<!--Container -->\n"],"sourceRoot":"webpack:///"}